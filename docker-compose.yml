version: "3.8"

services:
  postgres:
    image: postgres:14.8-alpine3.17
    container_name: postgresdb_container
    env_file: .env
    environment:
      POSTGRES_DB: $POSTGRES_DB_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - data_postgres:/var/lib/postgresql/data
  mongo:
    image: mongo:6.0.10-jammy
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    volumes:
      - data_mongo:/data/db

  node:
    image: node:18.18.0-alpine3.17
    container_name: node_service
    user: node
    working_dir: /home/node/app
    tty: true
    stdin_open: true
    ports:
      - $BACK_PORT:$BACK_PORT
    volumes:
      - ./back:/home/node/app

  react:
    depends_on:
      - node
    image: node:18.18.0-alpine3.17
    container_name: react_service
    user: node
    working_dir: /home/node/app
    tty: true
    stdin_open: true
    environment:
      PORT: $FRONT_PORT
      STORYBOOK_PORT: $FRONT_STORYBOOK_PORT
      STORYBOOK_DISABLE_TELEMETRY: 1 # https://storybook.js.org/docs/react/configure/telemetry
    ports:
      - $FRONT_PORT:$FRONT_PORT
      - $FRONT_STORYBOOK_PORT:$FRONT_STORYBOOK_PORT
    volumes:
      - ./front:/home/node/app

  adminer:
    image: adminer:4.8.1
    container_name: adminer-service
    depends_on:
      - postgres
    ports:
      - 8080:8080
    environment:
      ADMINER_DESIGN: nette
  
volumes:
  data_postgres:
  data_mongo: